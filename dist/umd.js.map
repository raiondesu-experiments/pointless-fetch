{"version":3,"file":"umd.js","sources":["../src/url.ts","../src/request.ts"],"sourcesContent":["export function join(parts: string[], separator: string = '/') {\n  const replace = new RegExp(`${separator}{1,}`, 'g');\n\n  return parts\n    .filter(_ => typeof _ === 'string' && _.trim())\n    .join(separator)\n    .replace(replace, separator);\n}\n\n/**\n * Creates a sub-url factory\n *\n * Example usage\n *\n * ```ts\n *  const myBlog = subUrl('https://my-blog.com');\n *  'https://my-blog.com'\n *\n *  const user = myBlog('user');\n *  'https://my-blog.com/user'\n *\n *  const userPost = user((id: number) => `${id}/post`);\n *  (id: number) => 'https://my-blog.com/user/${id}/post'\n * ```\n */\nexport const subUrl = function (this: string, base: string | ((...args: any[]) => string)) {\n  const applyBase = (\n    _base: (...args: any[]) => string\n  ) => (...args: any[]) => {\n    const concat = () => join([this, _base(...args)]);\n\n    const _subUrl = subUrl.bind(concat());\n    _subUrl.toString = concat;\n\n    return _subUrl;\n  };\n\n  if (typeof base === 'string') {\n    return applyBase(() => base)();\n  }\n\n  return applyBase(base);\n} as string & {\n  (base: string): typeof subUrl;\n\n  <F extends (...args: any[]) => string>(\n    base: F\n  ): (\n    ...args: Parameters<F>\n  ) => typeof subUrl;\n\n  toString(): string;\n};\n\nsubUrl.toString = () => '';\n\n/**\n * Encodes an object into the plain URL as url-query-string\n *\n * ```js\n *  query('/list', {\n *    amount: 5,\n *    filters: ['price', 'date']\n *  })\n * ```\n *\n * returns\n * ```js\n *  '/list?amount=5&filters=price,date'\n * ```\n *\n * @param url a url to encode params into\n * @param queryParams query params in object form\n * @returns url with encoded params\n */\nexport function query(url: string, queryParams: object) {\n  const query = Object.keys(queryParams)\n    .filter(k => k && queryParams[k] !== undefined)\n    .map((k): [string, string] => {\n      if (Array.isArray(queryParams[k])) {\n        return [join(queryParams[k], ','), k];\n      } else if (typeof queryParams[k] === 'object') {\n        return [JSON.stringify(queryParams[k]), k];\n      }\n\n      return [queryParams[k], k];\n    })\n    .map(([value, key]) => `${encodeURIComponent(key)}=${encodeURI(value)}`)\n    .join('&');\n\n  const prefix = (url.indexOf('?') > -1 ? '&' : '?');\n\n  return url + (query.length > 0 ? prefix + query : '');\n}\n","export type TRequest = RequestInit & { url: string };\n\nexport const request = ({ url, ...init }: TRequest) => new Request(url, init);\n"],"names":["join","parts","separator","replace","RegExp","filter","_","trim","subUrl","base","applyBase","_base","args","concat","_this","_subUrl","bind","toString","url","queryParams","query","Object","keys","k","undefined","map","Array","isArray","_typeof","JSON","stringify","value","key","encodeURIComponent","encodeURI","prefix","indexOf","length","init","Request"],"mappings":"8xCAAgBA,EAAKC,OAAiBC,yDAAoB,IAClDC,EAAU,IAAIC,iBAAUF,UAAiB,YAExCD,EACJI,OAAO,SAAAC,SAAkB,iBAANA,GAAkBA,EAAEC,SACvCP,KAAKE,GACLC,QAAQA,EAASD,OAmBTM,EAAS,SAATA,EAAiCC,cACtCC,EAAY,SAChBC,UACG,sCAAIC,2BAAAA,sBACDC,EAAS,kBAAMb,EAAK,CAACc,EAAMH,eAASC,MAEpCG,EAAUP,EAAOQ,KAAKH,YAC5BE,EAAQE,SAAWJ,EAEZE,UAGW,iBAATN,EACFC,EAAU,kBAAMD,GAAhBC,GAGFA,EAAUD,IAanBD,EAAOS,SAAW,iBAAM,qBAqBFC,EAAaC,OAC3BC,EAAQC,OAAOC,KAAKH,GACvBd,OAAO,SAAAkB,UAAKA,QAAwBC,IAAnBL,EAAYI,KAC7BE,IAAI,SAACF,UACAG,MAAMC,QAAQR,EAAYI,IACrB,CAACvB,EAAKmB,EAAYI,GAAI,KAAMA,GACA,WAA1BK,EAAOT,EAAYI,IACrB,CAACM,KAAKC,UAAUX,EAAYI,IAAKA,GAGnC,CAACJ,EAAYI,GAAIA,KAEzBE,IAAI,yBAAEM,OAAOC,uBAAYC,mBAAmBD,eAAQE,UAAUH,MAC9D/B,KAAK,KAEFmC,EAAUjB,EAAIkB,QAAQ,MAAQ,EAAI,IAAM,WAEvClB,GAAOE,EAAMiB,OAAS,EAAIF,EAASf,EAAQ,eC1F7B,gBAAGF,IAAAA,IAAQoB,sBAAqB,IAAIC,QAAQrB,EAAKoB"}